services:
  pgdb_user:
    image: postgres:alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    # ports:
    #   - "5432:5432"
    networks:
      - backend
    volumes:
      - pgdb_user_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d db"]
      interval: 5s
      timeout: 5s
      retries: 10
  
  app:
    container_name: app
    depends_on:
      pgdb_user:
        condition: service_healthy
    restart: on-failure
    build:
      context: .
      dockerfile: docker/auth/Dockerfile
    # ports:
    #   - "8080:8080"
    networks:
      - backend
      - frontend
  
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports: 
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    networks:
      - frontend
    restart: unless-stopped

volumes:
  pgdb_user_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge